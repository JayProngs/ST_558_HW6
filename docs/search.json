[
  {
    "objectID": "ST_558_HW6.html",
    "href": "ST_558_HW6.html",
    "title": "ST-558 Homework 6",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n\n\nlapply() function applies the operation or function to each element of the list and returns the list of outputs with the same length. Each element in output list will be result of function applied to each element. Equivalent function to lapply() in purrr is map() which does same thing with more consistency and flexibility.\n\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = “kendall”) on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n\n\nTo use cor() with lapply we have to give first input as list, second as name of function which is cor and additional parameter can be passed which will be method. So code would be like\n\n\nnew_list &lt;- lapply(my_list, cor, method = “kendall”)\n\n\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n\n\n\npurrr function always return consistent data type outputs which reduces chances of getting output with unexpected data types. Like map() returns list.\npurrr has error handling with safely() etc which allows us to do exception handling and return some default value instead of breaking code flow.\n\n\n\nWhat is a side-effect function?\n\n\nSide-effect function are function which performs operations other than just returning values which also affects entire environment. E.g., print(), cat()\n\n\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n\n\nDue to variable scoping in R, function call will prioritize the environmemt where they are defined. So as long as we don’t overwrite the function sd in global environment, variable with name sd in function will not conflict with built in sd() as it will check for local variables then move to parent environment."
  },
  {
    "objectID": "ST_558_HW6.html#task-1-conceptual-questions",
    "href": "ST_558_HW6.html#task-1-conceptual-questions",
    "title": "ST-558 Homework 6",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n\n\nlapply() function applies the operation or function to each element of the list and returns the list of outputs with the same length. Each element in output list will be result of function applied to each element. Equivalent function to lapply() in purrr is map() which does same thing with more consistency and flexibility.\n\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = “kendall”) on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n\n\nTo use cor() with lapply we have to give first input as list, second as name of function which is cor and additional parameter can be passed which will be method. So code would be like\n\n\nnew_list &lt;- lapply(my_list, cor, method = “kendall”)\n\n\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n\n\n\npurrr function always return consistent data type outputs which reduces chances of getting output with unexpected data types. Like map() returns list.\npurrr has error handling with safely() etc which allows us to do exception handling and return some default value instead of breaking code flow.\n\n\n\nWhat is a side-effect function?\n\n\nSide-effect function are function which performs operations other than just returning values which also affects entire environment. E.g., print(), cat()\n\n\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n\n\nDue to variable scoping in R, function call will prioritize the environmemt where they are defined. So as long as we don’t overwrite the function sd in global environment, variable with name sd in function will not conflict with built in sd() as it will check for local variables then move to parent environment."
  },
  {
    "objectID": "ST_558_HW6.html#task-2-writing-r-functions",
    "href": "ST_558_HW6.html#task-2-writing-r-functions",
    "title": "ST-558 Homework 6",
    "section": "Task 2: Writing R Functions",
    "text": "Task 2: Writing R Functions\n\n1. Writing RMSE Function\n\ngetRMSE &lt;- function(observed, predicted) {\n  sqrt(mean((observed - predicted)^2))\n}\n\nUsing ellipsis in function parameters\n\ngetRMSE &lt;- function(observed, predicted, ...) {\n  sqrt(mean((observed - predicted)^2, ...))\n}\n\n\n\n2. Create response value and predictions\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp~ x), data.frame(x))\n\nTest using resp and pred\n\nrmse_result &lt;- getRMSE(resp, pred)\nrmse_result\n\n[1] 0.9581677\n\n\nReplace with missing value\n\nresp[1:2] &lt;- NA_real_\n\nTesting without removing NA values\n\nrmse_result &lt;- getRMSE(resp, pred)\nrmse_result\n\n[1] NA\n\n\nAs we can see with missing values the function will return NA as output.\nTesting with using na.rm = True\n\nrmse_result &lt;- getRMSE(resp, pred, na.rm = TRUE)\nrmse_result\n\n[1] 0.9661699\n\n\nUsing na.rm as True will remove missing values and function will return actual error value.\n\n\n3. Create MAE function\n\ngetMAE &lt;- function(observed, predicted, ...) {\n  mean(abs(observed - predicted), ...)\n}\n\n\n\n4. Create response and prediction values. Test the function\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\nmae_result &lt;- getMAE(resp, pred)\nmae_result\n\n[1] 0.8155776\n\n\nAdd some missing values\n\nresp[1:2] &lt;- NA_real_\n\nTesting without removing NA values\n\nmae_result &lt;- getMAE(resp, pred)\nmae_result\n\n[1] NA\n\n\nTesting with using na.rm = True\n\nmae_result &lt;- getMAE(resp, pred, na.rm = TRUE)\nmae_result\n\n[1] 0.8241201\n\n\nSame behaviour can be seen with function calculating MAE as well.\n\n\n5. Create a wrapper function\n\ngetError &lt;- function(observed, predicted, metrics = c(\"RMSE\", \"MAE\"), ...) {\n  \n  if (!(is.atomic(observed) && is.vector(observed) && is.numeric(observed))) {\n    stop(\"The response input must be atomic numeric vector.\")\n  }\n  if (!(is.atomic(predicted) && is.vector(predicted) && is.numeric(predicted))) {\n    stop(\"The predicted input must be atomic numeric vector.\")\n  }\n  \n  results &lt;- list()\n  \n  if (\"RMSE\" %in% metrics) {\n    results$RMSE &lt;- getRMSE(observed, predicted, ...)\n  }\n  \n  if (\"MAE\" %in% metrics) {\n    results$MAE &lt;- getMAE(observed, predicted, ...)\n  }\n  return(results)\n}\n\n\n\n6. Generate the data\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp~ x), data.frame(x))\n\n\n\n7. Testing function calls\n\nrmse_result &lt;- getError(resp, pred, metrics = \"RMSE\")\nprint(rmse_result)\n\n$RMSE\n[1] 0.9581677\n\n\n\nmae_result &lt;- getError(resp, pred, metrics = \"MAE\")\nprint(mae_result)\n\n$MAE\n[1] 0.8155776\n\n\n\nboth_error &lt;- getError(resp, pred)\nprint(both_error)\n\n$RMSE\n[1] 0.9581677\n\n$MAE\n[1] 0.8155776\n\n\nAdd missing values\n\nresp[1:2] &lt;- NA_real_\n\nTesting without removing NA Values\n\nrmse_result &lt;- getError(resp, pred, metrics = \"RMSE\")\nprint(rmse_result)\n\n$RMSE\n[1] NA\n\n\n\nmae_result &lt;- getError(resp, pred, metrics = \"MAE\")\nprint(mae_result)\n\n$MAE\n[1] NA\n\n\n\nboth_error &lt;- getError(resp, pred)\nprint(both_error)\n\n$RMSE\n[1] NA\n\n$MAE\n[1] NA\n\n\nCalling function after removing NA Values\n\nrmse_result &lt;- getError(resp, pred, metrics = \"RMSE\", na.rm = TRUE)\nprint(rmse_result)\n\n$RMSE\n[1] 0.9661699\n\n\n\nmae_result &lt;- getError(resp, pred, metrics = \"MAE\", na.rm = TRUE)\nprint(mae_result)\n\n$MAE\n[1] 0.8241201\n\n\n\nboth_error &lt;- getError(resp, pred, na.rm = TRUE)\nprint(both_error)\n\n$RMSE\n[1] 0.9661699\n\n$MAE\n[1] 0.8241201\n\n\nPassing incorrect data type\nPassing data frame\n\ntest_1 &lt;- try(getError(data.frame(resp), pred), silent = TRUE)\nprint(test_1)\n\n[1] \"Error in getError(data.frame(resp), pred) : \\n  The response input must be atomic numeric vector.\\n\"\nattr(,\"class\")\n[1] \"try-error\"\nattr(,\"condition\")\n&lt;simpleError in getError(data.frame(resp), pred): The response input must be atomic numeric vector.&gt;\n\n\nPassing char vector\n\ntest_2 &lt;- try(getError(as.character(resp), pred), silent = TRUE)\nprint(test_2)\n\n[1] \"Error in getError(as.character(resp), pred) : \\n  The response input must be atomic numeric vector.\\n\"\nattr(,\"class\")\n[1] \"try-error\"\nattr(,\"condition\")\n&lt;simpleError in getError(as.character(resp), pred): The response input must be atomic numeric vector.&gt;"
  },
  {
    "objectID": "ST_558_HW6.html#task-3-querying-an-api-and-a-tidy-style-function",
    "href": "ST_558_HW6.html#task-3-querying-an-api-and-a-tidy-style-function",
    "title": "ST-558 Homework 6",
    "section": "Task 3: Querying an API and a Tidy-Style Function",
    "text": "Task 3: Querying an API and a Tidy-Style Function\n\n1. Querying News API\n\nlibrary(httr)\nlibrary(purrr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\napi_key &lt;- \"be56f597af854b8a808b8664ddb8665f\"\nurl &lt;- \"https://newsapi.org/v2/everything\"\nquery &lt;- list(\n  q = \"technology\",\n  from = \"2024-09-16\",\n  sortBy = \"publishedAt\",\n  apiKey = api_key\n)\n\nresponse &lt;- GET(url, query = query)\n\nresponse\n\nResponse [https://newsapi.org/v2/everything?q=technology&from=2024-09-16&sortBy=publishedAt&apiKey=be56f597af854b8a808b8664ddb8665f]\n  Date: 2024-10-16 05:58\n  Status: 200\n  Content-Type: application/json; charset=utf-8\n  Size: 94.8 kB\n\n\n\n\n2. Parsing the API response\n\ncontent_data &lt;- content(response, as = \"parsed\", simplifyDataFrame = TRUE)\narticles &lt;- pluck(content_data, \"articles\")\narticles_df &lt;- as_tibble(articles)\nprint(articles_df)\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Busi… \"Reut… Key … \"In one pl… http… https://b… 2024-10-15… \"In on…\n 2 the-time… The … \"ET O… UGC … \"UGC NET R… http… https://i… 2024-10-15… \"Artif…\n 3 &lt;NA&gt;      ETF … \"Mark… Crit… \"BOX (NYSE… http… https://w… 2024-10-15… \"BOX (…\n 4 &lt;NA&gt;      ETF … \"Mark… LG D… \"LG Displa… http… https://w… 2024-10-15… \"LG Di…\n 5 &lt;NA&gt;      Sams… \"Sams… [Unf… \"Anyone ca… http… https://i… 2024-10-15… \"Anyon…\n 6 &lt;NA&gt;      Forb… \"Lanc… AI S… \"A newly e… http… https://i… 2024-10-15… \"Get u…\n 7 &lt;NA&gt;      ETF … \"Mark… Irid… \"Iridium C… http… https://w… 2024-10-15… \"Iridi…\n 8 &lt;NA&gt;      ETF … \"Mark… SBM … \"SBM Offsh… http… https://w… 2024-10-15… \"SBM O…\n 9 &lt;NA&gt;      ETF … \"Mark… Crit… \"Robert Ha… http… https://w… 2024-10-15… \"Rober…\n10 &lt;NA&gt;      ETF … \"Mark… Anal… \"Pure Stor… http… https://w… 2024-10-15… \"Pure …\n# ℹ 90 more rows\n\n\n\n\n3. Function to query API\n\napiQueryFun &lt;- function(topic, from_date, apiKey) {\n  url &lt;- \"https://newsapi.org/v2/everything\"\n  \n  query &lt;- list(\n    q = topic,\n    from = from_date,\n    sortBy = \"publishedAt\",\n    apiKey = apiKey\n  )\n  \n  response &lt;- GET(url, query = query)\n  \n  if (status_code(response) != 200) {\n    stop(\"Error while fetching data from API.\")\n  }\n  \n  content_data &lt;- content(response, as = \"parsed\", simplifyDataFrame = TRUE)\n  articles &lt;- pluck(content_data, \"articles\")\n  articles_df &lt;- as_tibble(articles)\n  # print(articles_df)\n  \n  return(articles_df)\n}\n\nTesting function\n\ntopic &lt;- \"climate change\"\nfrom_date &lt;- \"2024-09-16\"\napiKey &lt;- 'be56f597af854b8a808b8664ddb8665f'\nnews_articles &lt;- apiQueryFun(topic, from_date, api_key)\nprint(news_articles)\n\n# A tibble: 100 × 8\n   source$id $name author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 &lt;NA&gt;      Sput… Mary … EU R… \"Mercury a… http… https://c… 2024-10-15… \"Get t…\n 2 &lt;NA&gt;      NPR   The A… Migr… \"Experts s… http… https://n… 2024-10-15… \"ALBUQ…\n 3 &lt;NA&gt;      Futu… Teri … Root… \"Vineyards… http… https://k… 2024-10-15… \"Dr Sm…\n 4 &lt;NA&gt;      Busi… AP     King… \"King Char… http… https://b… 2024-10-15… \"King …\n 5 &lt;NA&gt;      Arch… Nour … Fost… \"Foster + … http… https://i… 2024-10-15… \"Court…\n 6 &lt;NA&gt;      WWD   Thoma… Tiff… \"The progr… http… https://w… 2024-10-15… \"Tiffa…\n 7 &lt;NA&gt;      Futu… Decan… DWWA… \"Waitrose … http… https://k… 2024-10-15… \"Waitr…\n 8 the-iris… The … Conor… We n… \"They’re e… http… https://w… 2024-10-15… \"It is…\n 9 &lt;NA&gt;      The … The N… Is a… \"In this e… http… https://w… 2024-10-15… \"What …\n10 &lt;NA&gt;      Spri… Matth… Dire… \"This new … http… https://s… 2024-10-15… \"Spott…\n# ℹ 90 more rows\n\n\nGrab the data two times\n\ntech_news &lt;- apiQueryFun(\"technology\", \"2024-09-16\", 'be56f597af854b8a808b8664ddb8665f')\nclimate_news &lt;- apiQueryFun(\"climate change\", \"2024-09-16\", 'be56f597af854b8a808b8664ddb8665f')\n\n\n\n4. Summarize name of the source for each article\n\nlibrary(dplyr)\nlibrary(purrr)\ntech_news |&gt;\n  count(source$name)\n\n# A tibble: 32 × 2\n   `source$name`          n\n   &lt;chr&gt;              &lt;int&gt;\n 1 3dnews.ru              1\n 2 BBC News               1\n 3 Bernama.com            1\n 4 Business Standard      6\n 5 BusinessLine           1\n 6 CNA                    1\n 7 CNET                   1\n 8 Chip.com.tr            1\n 9 CoinDesk               1\n10 ComputerWeekly.com     2\n# ℹ 22 more rows\n\n\n\n\n5. sort publishedAt and assign tp pub_diff\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(dplyr)\n\ntech_news_new &lt;- tech_news |&gt;\n  mutate(publishedAt = ymd_hms(publishedAt)) |&gt;\n  arrange(publishedAt) |&gt;\n  mutate(pub_diff = publishedAt - lag(publishedAt))\n\nclimate_news_new &lt;- climate_news |&gt;\n  mutate(publishedAt = ymd_hms(publishedAt)) |&gt;\n  arrange(publishedAt) |&gt;\n  mutate(pub_diff = publishedAt - lag(publishedAt))\n\n\n\n6. subset and summarize using map()\n\ntech_news_subset &lt;- tech_news_new |&gt;\n  select(publishedAt, pub_diff)\n\nsummary_stats &lt;- tech_news_subset |&gt;\n  map(\\(x) list(\n    mean = mean(x, na.rm = TRUE),\n    sd = sd(x, na.rm = TRUE),\n    median = median(x, na.rm = TRUE)\n  ))\nsummary_stats\n\n$publishedAt\n$publishedAt$mean\n[1] \"2024-10-15 05:19:38 UTC\"\n\n$publishedAt$sd\n[1] 1349.701\n\n$publishedAt$median\n[1] \"2024-10-15 05:17:11 UTC\"\n\n\n$pub_diff\n$pub_diff$mean\nTime difference of 49.05051 secs\n\n$pub_diff$sd\n[1] 56.74151\n\n$pub_diff$median\nTime difference of 32 secs\n\n\n\nclimate_news_subset &lt;- climate_news_new |&gt;\n  select(publishedAt, pub_diff)\n\nsummary_stats &lt;- climate_news_subset |&gt;\n  map(\\(x) list(\n    mean = mean(x, na.rm = TRUE),\n    sd = sd(x, na.rm = TRUE),\n    median = median(x, na.rm = TRUE)\n  ))\nsummary_stats\n\n$publishedAt\n$publishedAt$mean\n[1] \"2024-10-15 01:53:42 UTC\"\n\n$publishedAt$sd\n[1] 8578.44\n\n$publishedAt$median\n[1] \"2024-10-15 01:14:21 UTC\"\n\n\n$pub_diff\n$pub_diff$mean\nTime difference of 277.1818 secs\n\n$pub_diff$sd\n[1] 470.5381\n\n$pub_diff$median\nTime difference of 133 secs"
  }
]